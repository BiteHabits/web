name: Build & Deploy Docker

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write
  id-token: write

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
  IMAGE_NAME: ghcr.io/bitehabits/web
  IMAGE_TAG: latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🔍 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 🐢 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: ./pnpm-lock.yaml

      - name: 🏗️ Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: 🔑 Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ⚙️ Build
        run: pnpm build

      - name: 🏗️ Migrate database
        run: pnpm db:migrate

      - name: 🐳 Build Docker Image
        run: |
          export DOCKER_BUILDKIT=1

          docker build \
            --secret id=database_url,env=DATABASE_URL \
            --secret id=database_auth_token,env=DATABASE_AUTH_TOKEN \
            -t $IMAGE_NAME:$IMAGE_TAG .

      - name: 🔐 Authenticate Docker
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: 🚀 Push Docker Image
        run: |
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: 👷 Apply Terraform
        id: apply
        run: |
          terraform init
          terraform apply -auto-approve \
            -var "database_url=${{ secrets.DATABASE_URL }}" \
            -var "database_auth_token=${{ secrets.DATABASE_AUTH_TOKEN }}" \
            -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}"
